version: "3.8"

networks:
  app_network:
    driver: bridge

services:
  api-gateway:
    build:
      context: ./ # Assuming Dockerfile and gateway main.go are in the root directory
      dockerfile: Dockerfile # Or specify path if Dockerfile is named differently or elsewhere
    container_name: api-gateway-container
    restart: unless-stopped
    environment:
      - PORT=8000
      - GIN_MODE=release # or debug
      - TZ=Asia/Ho_Chi_Minh
      # URLs for downstream services (these names will be resolved by Docker's internal DNS)
      - TRIP_SERVICE_URL=http://host.docker.internal:8082
      - USER_SERVICE_URL=http://host.docker.internal:8081
      - PAYMENT_SERVICE_URL=http://host.docker.internal:8083
      - TICKET_SERVICE_URL=http://host.docker.internal:8084
      - EMAIL_SERVICE_URL=http://host.docker.internal:8085
      - BANK_SERVICE_URL=http://host.docker.internal:8086
      - NEWS_SERVICE_URL=http://host.docker.internal:8087
      - SHIP_SERVICE_URL=http://host.docker.internal:8088
      - NOTIFICATION_SERVICE_URL=http://host.docker.internal:8089
      - QR_SERVICE_URL=http://host.docker.internal:8090
      - CHAT_BOT_SERVICE_URL=http://host.docker.internal:5005

    ports:
      - "8000:8000" # Expose gateway's port 8000 to host (optional if only accessed via Nginx)
    networks:
      - app_network
    env_file:
      - .env
    # volumes: # If you need to mount .env file, but prefer Docker Compose env vars
    #   - ./.env:/app/.env # Ensure .env is in the WORKDIR of the container

  nginx:
    image: nginx:1.25-alpine # Use a specific version
    container_name: nginx-proxy-container
    restart: unless-stopped
    ports:
      - "80:80" # Nginx listens on port 80 for HTTP
      # - "443:443" # Uncomment for HTTPS
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro # Mount your custom Nginx config
      # - ./path/to/your/ssl/certs:/etc/nginx/ssl:ro # Mount SSL certs for HTTPS
      - nginx_logs:/var/log/nginx # Persistent Nginx logs (optional)
    depends_on:
      - api-gateway # Nginx should start after the gateway is available (or handle startup order)
    networks:
      - app_network

volumes:
  nginx_logs:
  rabbitmq_data:
