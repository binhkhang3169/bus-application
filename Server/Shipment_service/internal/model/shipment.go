package model

// Dimensions struct defines the size of an item.
type Dimensions struct {
	Length float64 `json:"length" binding:"required,gt=0"` // Length in cm
	Width  float64 `json:"width" binding:"required,gt=0"`  // Width in cm
	Height float64 `json:"height" binding:"required,gt=0"` // Height in cm
}

// CreateShipmentRequest is the structure for client requests to create a new shipment.
type CreateShipmentRequest struct {
	TripID       int32      `json:"trip_id" binding:"required,gt=0"` // ID of the trip this shipment belongs to
	SenderName   string     `json:"sender_name" binding:"required,min=2,max=255"`
	ReceiverName string     `json:"receiver_name" binding:"required,min=2,max=255"`
	ItemName     string     `json:"item_name" binding:"required,min=2,max=255"`
	ItemType     string     `json:"item_type" binding:"required,oneof=document electronics furniture"` // Allowed item types
	Weight       float64    `json:"weight" binding:"required,gt=0"`                                    // Weight in kg
	PayerType    string     `json:"payer_type"`
	Dimensions   Dimensions `json:"dimensions" binding:"required"`
	Price        float64    `json:"price"`
	Note         string     `json:"note,omitempty" binding:"max=1000"` // Optional note
}

// ShipmentResponse defines the structure for a shipment returned to the client.
// It will typically be the db.Shipment struct generated by sqlc.
// We can define a separate response model if we need to transform the data.
// For now, we'll rely on sqlc's generated struct which has json tags.

// InvoiceResponse defines the structure for an invoice returned to the client.
// Similar to ShipmentResponse, this will often be db.Invoice from sqlc.
