// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package db

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

type Querier interface {
	CreateNotification(ctx context.Context, arg CreateNotificationParams) (Notification, error)
	// Xóa token khi người dùng đăng xuất hoặc không muốn nhận thông báo nữa
	DeleteFCMToken(ctx context.Context, token string) error
	// Lấy tất cả token trong database để gửi broadcast
	GetAllFCMTokens(ctx context.Context) ([]string, error)
	GetBroadcastNotifications(ctx context.Context, arg GetBroadcastNotificationsParams) ([]Notification, error)
	// Lấy tất cả token của một user cụ thể
	GetFCMTokensByUserID(ctx context.Context, userID string) ([]string, error)
	GetNotificationsByUserID(ctx context.Context, arg GetNotificationsByUserIDParams) ([]Notification, error)
	MarkAllUserNotificationsAsRead(ctx context.Context, userID pgtype.Text) ([]Notification, error)
	MarkNotificationAsRead(ctx context.Context, arg MarkNotificationAsReadParams) (Notification, error)
	// ========= QUERIES MỚI CHO FCM TOKENS =========
	// Sử dụng ON CONFLICT để xử lý việc đăng ký lại token đã tồn tại
	// (ví dụ: người dùng đăng xuất rồi đăng nhập lại trên cùng thiết bị)
	RegisterFCMToken(ctx context.Context, arg RegisterFCMTokenParams) (FcmToken, error)
}

var _ Querier = (*Queries)(nil)
